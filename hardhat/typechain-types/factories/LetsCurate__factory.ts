/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { LetsCurate, LetsCurateInterface } from "../LetsCurate";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "curationPolicyCode",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "policy",
        type: "string",
      },
    ],
    name: "NewCurationPolicy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "itemCID",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "curationPolicyCode",
        type: "uint256",
      },
    ],
    name: "NewItem",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "juryCandidate",
        type: "address",
      },
    ],
    name: "NewJuryCandidate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "itemCID",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "luckyNumber",
        type: "uint256",
      },
    ],
    name: "NewJuryDraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "itemCID",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "juryMember",
        type: "address",
      },
    ],
    name: "NewJuryMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "juryCandidate",
        type: "address",
      },
    ],
    name: "ResignJuryCandidate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "itemCID",
        type: "string",
      },
      {
        indexed: false,
        internalType: "enum LetsCurate.ItemState",
        name: "newState",
        type: "uint8",
      },
    ],
    name: "StateChange",
    type: "event",
  },
  {
    inputs: [],
    name: "JURY_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKE_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "itemCID",
        type: "string",
      },
    ],
    name: "announceJuryParticipation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "becomeJuryCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "itemCID",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vote",
        type: "uint256",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "itemCID",
        type: "string",
      },
    ],
    name: "conductJuryDraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "curationPolicyCID",
        type: "string",
      },
    ],
    name: "createCurationPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "itemCID",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "curationPolicyCode",
        type: "uint8",
      },
    ],
    name: "createNewItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "curationPolicyCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isJuryCandidate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "itemCIDs_itemStructs",
    outputs: [
      {
        internalType: "enum LetsCurate.ItemState",
        name: "state",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "lastStateChangeBlockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastLuckyNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "curationScore",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resignJuryCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50620000586040518060400160405280601f81526020017f4465706c6f79696e672061204c65747343757261746520636f6e7472616374008152506200005e60201b60201c565b62000258565b620000fe8160405160240162000075919062000205565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200010160201b60201c565b50565b6200012781620001226200012a60201b62000a6d176200014b60201b60201c565b60201c565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6200015f60201b62000baf17819050919050565b6200016962000229565b565b600081519050919050565b600082825260208201905092915050565b60005b83811015620001a75780820151818401526020810190506200018a565b60008484015250505050565b6000601f19601f8301169050919050565b6000620001d1826200016b565b620001dd818562000176565b9350620001ef81856020860162000187565b620001fa81620001b3565b840191505092915050565b60006020820190508181036000830152620002218184620001c4565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fd5b61164b80620002686000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063abd0042611610071578063abd0042614610166578063afaec52714610182578063c68a5421146101a0578063d1f8c04e146101d0578063ecae012e146101da578063fea429b5146101f8576100b4565b80631423f70f146100b95780633afe7179146100d55780635675acdd146100f15780636c42707d1461010d5780637d2f321e146101405780638458faef1461015c575b600080fd5b6100d360048036038101906100ce9190610c32565b610216565b005b6100ef60048036038101906100ea9190610cb5565b6102fc565b005b61010b60048036038101906101069190610c32565b610477565b005b61012760048036038101906101229190610e6a565b6106d1565b6040516101379493929190610f39565b60405180910390f35b61015a60048036038101906101559190610fb7565b610724565b005b6101646107b8565b005b610180600480360381019061017b9190610e6a565b6108a6565b005b61018a610947565b6040516101979190611017565b60405180910390f35b6101ba60048036038101906101b59190611090565b61094c565b6040516101c791906110d8565b60405180910390f35b6101d861096c565b005b6101e2610a5c565b6040516101ef9190611017565b60405180910390f35b610200610a62565b60405161020d9190611017565b60405180910390f35b6000600381111561022a57610229610eb3565b5b6002838360405161023c929190611123565b908152602001604051809103902060000160009054906101000a900460ff16600381111561026d5761026c610eb3565b5b1461027757600080fd5b8181604051610287929190611123565b60405180910390207f6ccee72132de0300b147dce31ddc9ee8186ded84e59eb3117f8fd211f155d62a446040516102be9190611017565b60405180910390a244600283836040516102d9929190611123565b9081526020016040518091039020600201819055506102f88282610a8e565b5050565b600260038111156103105761030f610eb3565b5b60028585604051610322929190611123565b908152602001604051809103902060000160009054906101000a900460ff16600381111561035357610352610eb3565b5b1461035d57600080fd5b6002848460405161036f929190611123565b908152602001604051809103902060030182815481106103925761039161113c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f457600080fd5b8060028585604051610407929190611123565b9081526020016040518091039020600401838154811061042a5761042961113c565b5b906000526020600020018190555060036002858560405161044c929190611123565b90815260200160405180910390206004018054905003610471576104708484610a8e565b5b50505050565b60006002838360405161048b929190611123565b90815260200160405180910390209050600160038111156104af576104ae610eb3565b5b600284846040516104c1929190611123565b908152602001604051809103902060000160009054906101000a900460ff1660038111156104f2576104f1610eb3565b5b146104fc57600080fd5b60003382600201546040516020016105159291906111d4565b6040516020818303038152906040528051906020012060001c90506000826001015443610542919061122f565b6001901b90508061056184600201548461055c919061126d565b610b8d565b11156105a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059990611333565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166108fc66038d7ea4c680009081150290604051600060405180830381858888f193505050501580156105ef573d6000803e3d6000fd5b5082600301339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600383600301805490500361066f5761066e8585610a8e565b5b3373ffffffffffffffffffffffffffffffffffffffff168585604051610696929190611123565b60405180910390207f622d7177a7fea6de9969f70d51c55ff78b23efe4d4d96f54f9234760c975a6aa60405160405180910390a35050505050565b6002818051602081018201805184825260208301602085012081835280955050505050506000915090508060000160009054906101000a900460ff16908060010154908060020154908060050154905084565b6000548160ff161061076b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610762906113c5565b60405180910390fd5b8060ff16838360405161077f929190611123565b60405180910390207fc6854c7f802b609be11d2c6546a1169545a51a83fd8bb3354c29b1e8a0dfbff360405160405180910390a3505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166108a45760018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f36f518a11e50cd943a6e7a4ee94589b24d926c3be1fe0351bccd88e9b8c4cd5360405160405180910390a25b565b600060016000546108b791906113e5565b036108f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ee9061148b565b60405180910390fd5b600080815480929190610909906114ab565b919050557fcd72dd5f47348d7ba115696421ee0581ab0c9a10c38d16cc8ea48973465c441b8260405161093c9190611561565b60405180910390a250565b600381565b60016020528060005260406000206000915054906101000a900460ff1681565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610a5a576000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167fe5a977b4e369be7c5e31327f5ec30fb54f2b22b4fb3b8f39eaeba897ba4255d160405160405180910390a25b565b60005481565b66038d7ea4c6800081565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b600060028383604051610aa2929190611123565b9081526020016040518091039020905060018160000160009054906101000a900460ff166003811115610ad857610ad7610eb3565b5b610ae291906113e5565b6003811115610af457610af3610eb3565b5b8160000160006101000a81548160ff02191690836003811115610b1a57610b19610eb3565b5b02179055504381600101819055508282604051610b38929190611123565b60405180910390207ff8383650396d7d53c5daf93d6d8a104bfd4b4f9e979940d4728f6735577aee658260000160009054906101000a900460ff16604051610b809190611583565b60405180910390a2505050565b600080821215610ba65781610ba19061159e565b610ba8565b815b9050919050565b610bb76115e6565b565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610bf257610bf1610bcd565b5b8235905067ffffffffffffffff811115610c0f57610c0e610bd2565b5b602083019150836001820283011115610c2b57610c2a610bd7565b5b9250929050565b60008060208385031215610c4957610c48610bc3565b5b600083013567ffffffffffffffff811115610c6757610c66610bc8565b5b610c7385828601610bdc565b92509250509250929050565b6000819050919050565b610c9281610c7f565b8114610c9d57600080fd5b50565b600081359050610caf81610c89565b92915050565b60008060008060608587031215610ccf57610cce610bc3565b5b600085013567ffffffffffffffff811115610ced57610cec610bc8565b5b610cf987828801610bdc565b94509450506020610d0c87828801610ca0565b9250506040610d1d87828801610ca0565b91505092959194509250565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d7782610d2e565b810181811067ffffffffffffffff82111715610d9657610d95610d3f565b5b80604052505050565b6000610da9610bb9565b9050610db58282610d6e565b919050565b600067ffffffffffffffff821115610dd557610dd4610d3f565b5b610dde82610d2e565b9050602081019050919050565b82818337600083830152505050565b6000610e0d610e0884610dba565b610d9f565b905082815260208101848484011115610e2957610e28610d29565b5b610e34848285610deb565b509392505050565b600082601f830112610e5157610e50610bcd565b5b8135610e61848260208601610dfa565b91505092915050565b600060208284031215610e8057610e7f610bc3565b5b600082013567ffffffffffffffff811115610e9e57610e9d610bc8565b5b610eaa84828501610e3c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610ef357610ef2610eb3565b5b50565b6000819050610f0482610ee2565b919050565b6000610f1482610ef6565b9050919050565b610f2481610f09565b82525050565b610f3381610c7f565b82525050565b6000608082019050610f4e6000830187610f1b565b610f5b6020830186610f2a565b610f686040830185610f2a565b610f756060830184610f2a565b95945050505050565b600060ff82169050919050565b610f9481610f7e565b8114610f9f57600080fd5b50565b600081359050610fb181610f8b565b92915050565b600080600060408486031215610fd057610fcf610bc3565b5b600084013567ffffffffffffffff811115610fee57610fed610bc8565b5b610ffa86828701610bdc565b9350935050602061100d86828701610fa2565b9150509250925092565b600060208201905061102c6000830184610f2a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061105d82611032565b9050919050565b61106d81611052565b811461107857600080fd5b50565b60008135905061108a81611064565b92915050565b6000602082840312156110a6576110a5610bc3565b5b60006110b48482850161107b565b91505092915050565b60008115159050919050565b6110d2816110bd565b82525050565b60006020820190506110ed60008301846110c9565b92915050565b600081905092915050565b600061110a83856110f3565b9350611117838584610deb565b82840190509392505050565b60006111308284866110fe565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008160601b9050919050565b60006111838261116b565b9050919050565b600061119582611178565b9050919050565b6111ad6111a882611052565b61118a565b82525050565b6000819050919050565b6111ce6111c982610c7f565b6111b3565b82525050565b60006111e0828561119c565b6014820191506111f082846111bd565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061123a82610c7f565b915061124583610c7f565b925082820390508181111561125d5761125c611200565b5b92915050565b6000819050919050565b600061127882611263565b915061128383611263565b92508282039050818112600084121682821360008512151617156112aa576112a9611200565b5b92915050565b600082825260208201905092915050565b7f54686973206a7572792063616e646964617465206973206e6f7420656c69676960008201527f626c65207965742e2054727920616761696e206c617465722e00000000000000602082015250565b600061131d6039836112b0565b9150611328826112c1565b604082019050919050565b6000602082019050818103600083015261134c81611310565b9050919050565b7f54686973206375726174696f6e20706f6c696320646f6573206e6f742065786960008201527f73742e0000000000000000000000000000000000000000000000000000000000602082015250565b60006113af6023836112b0565b91506113ba82611353565b604082019050919050565b600060208201905081810360008301526113de816113a2565b9050919050565b60006113f082610c7f565b91506113fb83610c7f565b925082820190508082111561141357611412611200565b5b92915050565b7f4e6f2073746f72616765207370616365206c65667420666f722061206e65772060008201527f6375726174696f6e20706f6c6963792e00000000000000000000000000000000602082015250565b60006114756030836112b0565b915061148082611419565b604082019050919050565b600060208201905081810360008301526114a481611468565b9050919050565b60006114b682610c7f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114e8576114e7611200565b5b600182019050919050565b600081519050919050565b60005b8381101561151c578082015181840152602081019050611501565b60008484015250505050565b6000611533826114f3565b61153d81856112b0565b935061154d8185602086016114fe565b61155681610d2e565b840191505092915050565b6000602082019050818103600083015261157b8184611528565b905092915050565b60006020820190506115986000830184610f1b565b92915050565b60006115a982611263565b91507f800000000000000000000000000000000000000000000000000000000000000082036115db576115da611200565b5b816000039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea2646970667358221220fe3d197948cd85048a8b1c7c07098def6ce9a0c7454213b57dec3a728076392c64736f6c63430008130033";

type LetsCurateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LetsCurateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LetsCurate__factory extends ContractFactory {
  constructor(...args: LetsCurateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LetsCurate & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LetsCurate__factory {
    return super.connect(runner) as LetsCurate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LetsCurateInterface {
    return new Interface(_abi) as LetsCurateInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LetsCurate {
    return new Contract(address, _abi, runner) as unknown as LetsCurate;
  }
}
